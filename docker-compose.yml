services:
  db:
    image: postgres:latest
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      
    networks:
      - backend

  web:
    build: .
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis  # Ensure web depends on Redis service
    environment:
      DATABASE_URL: postgres://user:password@db:5432/mydb
      CELERY_BROKER_URL: redis://redis:6379/0  # Celery broker URL for Redis
      DB_HOST: db
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"  # Expose Redis on port 6379
    networks:
      - backend

  celery:
    build: .
    command: ["celery", "-A", "core", "worker", "--loglevel=info"]
    depends_on:
      - web  # Ensure Celery starts after the web service
      - redis  # Celery needs Redis to be up
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0  # Celery broker URL for Redis
    networks:
      - backend

networks:
  backend:

volumes:
  postgres_data:


